Version 
node   node -v   v20.11.1
npm    npm -v    10.2.4


Paginas
https://nodejs.org/en
https://www.npmjs.com/

Crear archivo .gitignore
                node_modules/*
                .env

Crear archivo index.js
Crear archivo .env
Crear carpetas:  routes,views,controllers, models


1.Crear    Proyecto  :              npm init                Crea el package.json
  En el archivo package.json  cambiar test por              "start": "node ./index.js",    npm run start o npm start   inicia el index.js

2. Dependencias de Produccion
Instalar framework :              npm i express	        Crea el package-lock.json y la carpeta node_modules   4.19.2
Motor de plantillas Pug           npm install pug       3.0.3 

3. Dependencias de Desarrollo
Dependencia Nodemon                 npm i -D nodemon	    dependencia de desarrollo que sirve para mantener levantado el servidor  3.1.3
                                                              "server": "nodemon ./index.js"   en scripts   npm run server

4. Archivo Index          
Trabajamos  express     mediante //ECMA-Script Modules, En package.json y agregar   "type": "module",
    import express,   llamar aplicacion app,    crear ruta,     indicar puerto que va a escuchar
          import express from 'express'; 
          const app = express();
          const port = process.env.PORT || 3000;
          app.listen(port, ()=>{
              console.log(`Escuchando en el puerto ${port}`)
          });
          app.get('/', function(req,res){
          res.send("hola mundo desde express");
          })
          ver index-v1.txt


5.tailwindcss
https://tailwindcss.com/
npm install -D tailwindcss
npm install -D autoprefixer postcss postcss-cli


Crear carpeta Public  css- img - js -uploads


Extensiones
Instlar  pug   tailwindcss intellisense
          
ORM
npm i sequelize mysql2
https://sequelize.org/ 


Crear archivo de configuracion :   Carpeta config   -- archivo db.js,  configurar variables de entorno conexion a Bd,  modificar index para conexion a bd  
npm i dotenv      //instalar para llamar las variables de entorno
npm i express-validator    // Para realizar validaciones
npm i bcrypt               // Para encriptar contraseñas

Crear carpeta helper :  Son funciones genericas  ejemplo enviar correo   generar token,    manejo de fechas
                        creamos el helper token.js    const generatorId = () => Date.now().toString(32) + Math.random().toString(32).substring(2);
                        importamos en el controlador y usamos cuando vamos a guardar el usuario 



Para envio de correo Necesitamos nodemailer y mailtrap 
https://nodemailer.com/
npm install nodemailer



//Agregar seguridad a las sesiones de usuario:  
JWT
jwt.io 

Un JWT (JSON Web Token) es un estándar abierto (RFC 7519) que se utiliza para compartir información de manera segura entre un cliente 
y un servidor como un objeto JSON. Los JWT son ampliamente utilizados para autenticación y autorización en aplicaciones web y móviles.
Se espera que JWt tenga un tiempo en que caduque

npm install jsonwebtoken
npm install cookie-parser
